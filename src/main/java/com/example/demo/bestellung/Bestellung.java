package com.example.demo.bestellung;

import javax.persistence.*;

@Entity
@Table(name = "bestellungen")

public class Bestellung {
    @Id
    //Sequence Generator generates automatically new Ids for each Order
    @SequenceGenerator(
            name = "bestellung_sequence",
            sequenceName = "bestellung_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator =  "bestellung_sequence"
    )
    private Long id;
    private Long product_id;
    private int amount;
    private int store_id;  //in this setting stores are registered by ID, and all further details about the store such as the address can be derived from that
    private int status;  // 0=order not yet processed, 1=order has been sent, but not database was not yet adjusted, 2=order is fully processed and finished, 99=something went wrong -> Flag for Employees to manually check this

    // Constructors:
    public Bestellung() {
    }

    public Bestellung(Long product_id, int amount, int store_id, int status) {
        //no Bestellung_id because it will be generated by our db sequence generator
        this.product_id = product_id;
        this.amount = amount;
        this.store_id = store_id;
        this.status = status;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getProduct_id() {
        return product_id;
    }

    public void setProduct_id(Long product_id) {
        this.product_id = product_id;
    }

    public int getAmount() {
        return amount;
    }

    public void setAmount(int amount) {
        this.amount = amount;
    }

    public int getStore_id() {
        return store_id;
    }

    public void setStore_id(int store_id) {
        this.store_id = store_id;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return "Bestellung{" +
                "id=" + id +
                ", product_id=" + product_id +
                ", amount=" + amount +
                ", store_id=" + store_id +
                ", status=" + status +
                '}';
    }
}
